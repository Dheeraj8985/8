import pandas as pd
import numpy as np
from keras.models import Sequential
from keras.layers import Dense
import tensorflow as tf

url="https://archive.ics.uci.edu/ml/machine-learning-databases/letter-recognition/letter-recognition.data"
col_names=["Letter",2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17]
df=pd.read_csv(url,names=col_names)
print(df)

#split as x and y
x=df.iloc[:,1:]
x

y=df.iloc[:,0]
y

#label encoding of y
from sklearn.preprocessing import LabelEncoder
le=LabelEncoder()
y=le.fit_transform(y)

y

#one hot encoding
from keras.utils import to_categorical
y=to_categorical(y)

from sklearn.model_selection import train_test_split
x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.2,random_state=0)

x_train

y_train

model=Sequential()
model.add(Dense(64,input_shape=(16,),activation="relu"))
model.add(Dense(32,input_shape=(16,),activation="relu"))
model.add(Dense(26,input_shape=(16,),activation="softmax"))

model.compile(optimizer="adam",loss="categorical_crossentropy",metrics=["accuracy",tf.keras.metrics.Precision(),tf.keras.metrics.Recall()])

model.fit(x_train,y_train,epochs=15,batch_size=32,validation_data=(x_test,y_test))

y_pred=model.predict(x_test)
y_pred.shape
print(np.argmax(y_pred,axis=1))
print(le.inverse_transform(np.argmax(y_pred,axis=1)))

loss,accuracy,precision,recall=model.evaluate(x_test,y_test)

accuracy